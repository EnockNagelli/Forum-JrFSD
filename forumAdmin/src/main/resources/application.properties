# non-secure port
server.port:8091
#debug=true

# Service ID / Virtual Host
spring.application.name=FORUM-ADMIN

spring.data.mongodb.uri=mongodb://localhost:27017/forumAdminDB

# Flag to say that, when guessing a hostname, the IP address of the server should be used in prference to 
# the hostname reported by the OS.
eureka.instance.preferIpAddress=true

# HTTP basic authentication is automatically added to your eureka client if one of the 
# 'eureka.client.serviceUrl.defaultZone' URLs has credentials embedded in it 
# (curl style, as follows: http://user:password@localhost:8761/eureka).
# "defaultZone" is a magic string fallback value that provides the service URL for any client 
# that does not express a preference (in other words, it is a useful default).
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#eureka.client.fetchRegistry=true
#eureka.client.registerWithEureka=true








#----------------------------------------------------------------------------------------------------
# The default application name (that is, the service ID), virtual host, and non-secure port 
# (taken from the Environment) are ${spring.application.name}, ${spring.application.name} and ${server.port}, respectively.

# Having 'spring-cloud-starter-netflix-eureka-client' dependency (on the classpath) makes the app 
# into both a Eureka "instance" (that is, it registers itself) and a "client" (it can query the 
# registry to locate other services). The instance behaviour is driven by 'eureka.instance.*' 
# configuration keys, but the defaults are fine if you ensure that your application has a value 
# for spring.application.name (this is the default for the Eureka service ID or VIP).

# To disable the Eureka Discovery Client, you can set 'eureka.client.enabled' to 'false'. 
# Eureka Discovery Client will also be disabled when 'spring.cloud.discovery.enabled' is set to 'false'.
